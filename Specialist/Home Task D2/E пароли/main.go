//Хитрый валидатор паролей LOLKEK9000
//
//В наше время вопрос обеспечения безопасности в сети стоит достаточно остро, поэтому вам поручено разработать сверх-интеллектуальную систему проверки паролей с замысловатым названием LOLKEK9000.
//
//Пользователь работает с вашей системой следующим образом. Он вводит 2 строки: пароль и еще раз тот же самый пароль.
//
//В этот момент в игру вступает LOLKEK9000 и если пароли не удовлетворяют запросам валидатора пользователю придется ввести пароли еще раз (и так будет продолжаться до тех пор, пока не будут выполнены все требования сверхинтеллектуальной системы).
//
//LOLKEK9000 умеет делать следующее:
//
//если первый пароль из пары, которую ввел пользователь, короче 8 символов , программа выводит "Слишком короткий пароль!" и заново считывает пару паролей.
//если же первый пароль больше (или равен) 8 символов , но в нем содержатся подстроки "123" или "qwe" - программа выводит "Слишком простой пароль!" и заново считывает пару паролей.
//если же обе вышеуказанные проверки успешно пройдены, но пароли между собой не совпадают - программа выводит "Введенные пароли различаются!" и заново считывает пару паролей.
//если все пункты выше пройдены успешно, программа выводит "Ну наконец-то!" и завершается.

package main

import (
	"fmt"
	"strings"
)

func main() {
	var onePass, secPass string

	for {
	outer:
		for {
			fmt.Print("Enter the password:")
			fmt.Scan(&onePass)
			if len(onePass) < 8 {
				fmt.Println("Слишком короткий пароль!")
				break outer
			} else if strings.Contains(onePass, "123") || strings.Contains(onePass, "qwe") {
				fmt.Println("Слишком простой пароль!")
				break outer
			}
			fmt.Print("Resume password:")
			fmt.Scan(&secPass)
			if onePass == secPass {
				fmt.Println("Ну наконец-то")
				return
			} else if onePass != secPass {
				fmt.Println("Введенные пароли различаются!")
			}
		}
	}
}
